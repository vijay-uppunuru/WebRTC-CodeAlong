<!DOCTYPE html>
<html>
<head>
	<title></title>
	<link rel="stylesheet" type="text/css" href="styles.css">
	<script type="text/javascript" src="/socket.io/socket.io.js"></script>
</head>
<body>

	<div id="cameraSelector">
		Video: <select id="camera"></select>
	</div>

	<p><button id="takeProfilePicture" type="button" autofocus="true"> Create Profile image</button></p>

	<video id="videoTag" autoplay></video>

	<div>
		<label>Your Name</label><input id="myName" type="text"/>
		<label>Message</label><input id="myMessage" type="text"/>
		<input id="sendMessage" type="submit"/>
		<div id="chatArea">Message Output:</br></div>
	</div>


	<script type="text/javascript">
		
		var videoArea = document.querySelector("video");
		var videoSelect = document.querySelector('#camera');
		var myName = document.querySelector("#myName");
		var myMessage = document.querySelector("#myMessage");
		var sendMessage = document.querySelector("#sendMessage");
		var chatArea = document.querySelector("#chatArea");
		var ROOM = "chat";
		
			if (typeof MediaStreamTrack === 'undefined' || typeof MediaStreamTrack.getSources === 'undefined') {
				document.querySelector("#cameraSelector").style.visibility="hidden";
			} else {
				MediaStreamTrack.getSources(getCameras);
			}
			



		videoSelect.onChange = startStream;

		// startStream();

		io = io.connect();
		io.emit('ready', ROOM);

		io.on('announce', function(data){
			displayMessage(data.message);
		});

		io.on('message', function(data) {
			displayMessage(data.author + ": " + data.message);
		});
		
		sendMessage.addEventListener('click', function(ev){
			io.emit('send', {"author":myName.value, "message":myMessage.value, "room":ROOM});
			ev.preventDefault();
		}, false);

		function displayMessage(message){
			chatArea.innerHTML = chatArea.innerHTML + "<br>" + message;
		}


		function getCameras(sourceInfos) {
			for (var i = 0; i !== sourceInfos.length; ++i) {
				var sourceInfo = sourceInfos[i];
				var option = document.createElement('option');
				option.value = sourceInfo.id;
				if (sourceInfo.kind === 'video') {
					option.text = sourceInfo.label || 'camera ' + (videoSelect.length + 1);
					videoSelect.appendChild(option);
				}
			}
		}

		function startStream() {
			navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

			var constraints = {
				audio: false, 
				video: false
			};			

			navigator.getUserMedia(constraints, onSuccess, onError);		
		}


		function onSuccess(stream){
			console.log("video stream found");
			videoArea.src = window.URL.createObjectURL(stream);
			videoArea.play();
		}

		function onError(error){
			console.log("Error with getting user media: ", error);
		}

	</script>

</body>
</html>